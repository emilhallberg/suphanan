name: Build and deploy

on:
  push:
    branches:
      - main

jobs:
  server:
    runs-on: ubuntu-latest
    name: Build and deploy server
    env:
      REGISTRY: "ghcr.io/emilhallberg"
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ github.token }}"

      - name: Set environment variables
        run: |
          echo "SHA_SHORT=$(git describe --abbrev=10 --always)" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}/suphanan/server" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: server
          push: true
          tags: "${{ env.IMAGE_REGISTRY }}:latest,${{ env.IMAGE_REGISTRY }}:${{ env.SHA_SHORT }}"
          cache-from: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache"
          cache-to: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache,mode=max"

  client:
    runs-on: ubuntu-latest
    name: Build and deploy client
    env:
      REGISTRY: "ghcr.io/emilhallberg"
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ github.token }}"

      - name: Set environment variables
        run: |
          echo "SHA_SHORT=$(git describe --abbrev=10 --always)" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.REGISTRY }}/suphanan/client" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: client
          push: true
          tags: "${{ env.IMAGE_REGISTRY }}:latest,${{ env.IMAGE_REGISTRY }}:${{ env.SHA_SHORT }}"
          cache-from: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache"
          cache-to: "type=registry,ref=${{ env.IMAGE_REGISTRY }}:buildcache,mode=max"

  trigger-infra:
    runs-on: ubuntu-latest
    name: Trigger infra pipeline
    needs:
      - server
      - client
    steps:
      - name: Trigger pipeline
        run: |
          curl \
            https://api.github.com/repos/emilhallberg/infrastructure/dispatches \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -d '{"event_type":"trigger-k8s-update","client_payload":{"unit":false,"integration":true}}' \
            --header 'authorization: Bearer ${{ secrets.GH_ADMIN_ACCESS_TOKEN }}'

